SUFFICES=.cu .cpp .h

check_PROGRAMS=test perf

LDADD=
LIBS=

AM_CPPFLAGS=-I$(top_srcdir)/..

test_SOURCES=main.cpp MinimalTestSuite.cpp CUDAFormulasBGFuncTest.cpp CUDAFormulasDGFuncTest.cpp DeviceRandomTest.cpp CUDADenseGraphBFSolverTest.cpp DeviceSegmentedSumTest.cu CUDADenseGraphAnnealerTest.cpp utils.cpp
perf_SOURCES=perf.cpp


if CUDA_ENABLED
  test_SOURCES+=DeviceMathTest.cpp DeviceTest.cpp
  LDADD+=$(top_builddir)/cuda/libcuda.la
  LIBS+=-L/usr/local/cuda/lib64 -lcublas -lcudart
endif
if WITH_BLAS
  LIBS+=-lblas
endif

LDADD+=$(top_builddir)/cpu/libcpu.la $(top_builddir)/common/libcommon.la

run: $(check_PROGRAMS)
	./test


# CUDA

include ./$(DEPDIR)/DeviceSegmentedSumTest.Po

NVCC=@NVCC@

.cu.o:  # generate dep, and compile
	$(NVCC) -M -std=c++11 -arch=sm_61 -Xcompiler "$(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)" $<  -o $(DEPDIR)/$*.Tpo
	$(NVCC) -c -std=c++11 -arch=sm_61 -Xcompiler "$(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)"  $<  -o $*.o
	sed s/$*.o/$*.lo/ $(DEPDIR)/$*.Tpo > $(DEPDIR)/$*.Po
	rm -f $(DEPDIR)/$*.Tpo

# .cu.lo:
# 	mkdir -p .libs
# 	$(NVCC) -M -std=c++11 -arch=sm_61 -Xcompiler "$(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)" $<  -o $(DEPDIR)/$*.Tpo  # generate dep
# 	$(NVCC) -c -std=c++11 -arch=sm_61 -Xcompiler "$(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)"  $<  -o .libs/$*.o  # compile
# 	@echo "# Generated by libtool :  .lo file for CUDA objects." > $@
# 	@echo "pic_object='.libs/$*.o'" >> $@
# 	@echo "non_pic_object=none" >> $@ # FIXME: add static ver.
# 	sed s/$*.o/$*.lo/ $(DEPDIR)/$*.Tpo > $(DEPDIR)/$*.Plo
# 	rm -f $(DEPDIR)/$*.Tpo

%.Plo:
	touch $@
%.Po:
	touch $@
